{"id":"node_modules/@tensorflow-models/hand-pose-detection/tfjs/detector.js","dependencies":[{"name":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/detector.js.map","includedInParent":true,"mtime":1659488981856},{"name":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/package.json","includedInParent":true,"mtime":1659488584354},{"name":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/.babelrc","includedInParent":true,"mtime":1659488584354},{"name":"@tensorflow/tfjs-converter","loc":{"line":56,"column":21},"parent":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/detector.js","resolved":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow/tfjs-converter/dist/index.js"},{"name":"@tensorflow/tfjs-core","loc":{"line":57,"column":17},"parent":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/detector.js","resolved":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow/tfjs-core/dist/index.js"},{"name":"../constants","loc":{"line":58,"column":26},"parent":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/detector.js","resolved":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/constants.js"},{"name":"../shared/calculators/association_norm_rect","loc":{"line":59,"column":38},"parent":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/detector.js","resolved":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/shared/calculators/association_norm_rect.js"},{"name":"../shared/calculators/calculate_landmark_projection","loc":{"line":60,"column":46},"parent":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/detector.js","resolved":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/shared/calculators/calculate_landmark_projection.js"},{"name":"../shared/calculators/calculate_world_landmark_projection","loc":{"line":61,"column":52},"parent":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/detector.js","resolved":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/shared/calculators/calculate_world_landmark_projection.js"},{"name":"../shared/calculators/convert_image_to_tensor","loc":{"line":62,"column":40},"parent":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/detector.js","resolved":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/shared/calculators/convert_image_to_tensor.js"},{"name":"../shared/calculators/create_ssd_anchors","loc":{"line":63,"column":35},"parent":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/detector.js","resolved":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/shared/calculators/create_ssd_anchors.js"},{"name":"../shared/calculators/detection_to_rect","loc":{"line":64,"column":34},"parent":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/detector.js","resolved":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/shared/calculators/detection_to_rect.js"},{"name":"../shared/calculators/detector_result","loc":{"line":65,"column":32},"parent":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/detector.js","resolved":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/shared/calculators/detector_result.js"},{"name":"../shared/calculators/image_utils","loc":{"line":66,"column":28},"parent":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/detector.js","resolved":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/shared/calculators/image_utils.js"},{"name":"../shared/calculators/non_max_suppression","loc":{"line":67,"column":36},"parent":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/detector.js","resolved":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/shared/calculators/non_max_suppression.js"},{"name":"../shared/calculators/normalized_keypoints_to_keypoints","loc":{"line":68,"column":50},"parent":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/detector.js","resolved":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/shared/calculators/normalized_keypoints_to_keypoints.js"},{"name":"../shared/calculators/remove_detection_letterbox","loc":{"line":69,"column":43},"parent":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/detector.js","resolved":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/shared/calculators/remove_detection_letterbox.js"},{"name":"../shared/calculators/remove_landmark_letterbox","loc":{"line":70,"column":42},"parent":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/detector.js","resolved":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/shared/calculators/remove_landmark_letterbox.js"},{"name":"../shared/calculators/tensors_to_detections","loc":{"line":71,"column":38},"parent":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/detector.js","resolved":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/shared/calculators/tensors_to_detections.js"},{"name":"../shared/calculators/tensors_to_landmarks","loc":{"line":72,"column":37},"parent":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/detector.js","resolved":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/shared/calculators/tensors_to_landmarks.js"},{"name":"../shared/calculators/transform_rect","loc":{"line":73,"column":31},"parent":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/detector.js","resolved":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/shared/calculators/transform_rect.js"},{"name":"./calculators/hand_landmarks_to_rect","loc":{"line":74,"column":39},"parent":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/detector.js","resolved":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/calculators/hand_landmarks_to_rect.js"},{"name":"./constants","loc":{"line":75,"column":24},"parent":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/detector.js","resolved":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/constants.js"},{"name":"./detector_utils","loc":{"line":76,"column":31},"parent":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/detector.js","resolved":"/Users/junhwanjang/Documents/GitHub/tfjs-models/hand-pose-detection/demos/live_video/node_modules/@tensorflow-models/hand-pose-detection/tfjs/detector_utils.js"}],"generated":{"js":"\"use strict\";\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.load = void 0;\nvar tfconv = require(\"@tensorflow/tfjs-converter\");\nvar tf = require(\"@tensorflow/tfjs-core\");\nvar constants_1 = require(\"../constants\");\nvar association_norm_rect_1 = require(\"../shared/calculators/association_norm_rect\");\nvar calculate_landmark_projection_1 = require(\"../shared/calculators/calculate_landmark_projection\");\nvar calculate_world_landmark_projection_1 = require(\"../shared/calculators/calculate_world_landmark_projection\");\nvar convert_image_to_tensor_1 = require(\"../shared/calculators/convert_image_to_tensor\");\nvar create_ssd_anchors_1 = require(\"../shared/calculators/create_ssd_anchors\");\nvar detection_to_rect_1 = require(\"../shared/calculators/detection_to_rect\");\nvar detector_result_1 = require(\"../shared/calculators/detector_result\");\nvar image_utils_1 = require(\"../shared/calculators/image_utils\");\nvar non_max_suppression_1 = require(\"../shared/calculators/non_max_suppression\");\nvar normalized_keypoints_to_keypoints_1 = require(\"../shared/calculators/normalized_keypoints_to_keypoints\");\nvar remove_detection_letterbox_1 = require(\"../shared/calculators/remove_detection_letterbox\");\nvar remove_landmark_letterbox_1 = require(\"../shared/calculators/remove_landmark_letterbox\");\nvar tensors_to_detections_1 = require(\"../shared/calculators/tensors_to_detections\");\nvar tensors_to_landmarks_1 = require(\"../shared/calculators/tensors_to_landmarks\");\nvar transform_rect_1 = require(\"../shared/calculators/transform_rect\");\nvar hand_landmarks_to_rect_1 = require(\"./calculators/hand_landmarks_to_rect\");\nvar constants = require(\"./constants\");\nvar detector_utils_1 = require(\"./detector_utils\");\n/**\n * MediaPipeHands detector class.\n */\nvar MediaPipeHandsTfjsDetector = /** @class */ (function () {\n    function MediaPipeHandsTfjsDetector(detectorModel, landmarkModel, maxHands) {\n        this.detectorModel = detectorModel;\n        this.landmarkModel = landmarkModel;\n        this.maxHands = maxHands;\n        // Store global states.\n        this.prevHandRectsFromLandmarks = null;\n        this.anchors =\n            create_ssd_anchors_1.createSsdAnchors(constants.MPHANDS_DETECTOR_ANCHOR_CONFIGURATION);\n        var anchorW = tf.tensor1d(this.anchors.map(function (a) { return a.width; }));\n        var anchorH = tf.tensor1d(this.anchors.map(function (a) { return a.height; }));\n        var anchorX = tf.tensor1d(this.anchors.map(function (a) { return a.xCenter; }));\n        var anchorY = tf.tensor1d(this.anchors.map(function (a) { return a.yCenter; }));\n        this.anchorTensor = { x: anchorX, y: anchorY, w: anchorW, h: anchorH };\n    }\n    /**\n     * Estimates hands for an image or video frame.\n     *\n     * It returns a single hand or multiple hands based on the maxHands\n     * parameter from the `config`.\n     *\n     * @param image\n     * ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement The input\n     * image to feed through the network.\n     *\n     * @param estimationConfig Optional. See `MediaPipeHandsTfjsEstimationConfig`\n     *       documentation for detail.\n     *\n     * @return An array of `Hand`s.\n     */\n    // TF.js implementation of the mediapipe hand detection pipeline.\n    // ref graph:\n    // https://github.com/google/mediapipe/blob/master/mediapipe/mediapipe/modules/hand_landmark/hand_landmark_tracking_cpu.pbtxt\n    MediaPipeHandsTfjsDetector.prototype.estimateHands = function (image, estimationConfig) {\n        return __awaiter(this, void 0, void 0, function () {\n            var config, imageSize, image3d, prevHandRectsFromLandmarks, handRects, allPalmDetections, palmDetections, handRectsFromPalmDetections, handResults, hands, _i, handResults_1, handResult, landmarks, worldLandmarks, score, handedness, keypoints, keypoints3D;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        config = detector_utils_1.validateEstimationConfig(estimationConfig);\n                        if (image == null) {\n                            this.reset();\n                            return [2 /*return*/, []];\n                        }\n                        imageSize = image_utils_1.getImageSize(image);\n                        image3d = tf.tidy(function () {\n                            var imageTensor = tf.cast(image_utils_1.toImageTensor(image), 'float32');\n                            if (config.flipHorizontal) {\n                                var batchAxis = 0;\n                                imageTensor = tf.squeeze(tf.image.flipLeftRight(\n                                // tslint:disable-next-line: no-unnecessary-type-assertion\n                                tf.expandDims(imageTensor, batchAxis)), [batchAxis]);\n                            }\n                            return imageTensor;\n                        });\n                        prevHandRectsFromLandmarks = this.prevHandRectsFromLandmarks;\n                        if (!(config.staticImageMode || prevHandRectsFromLandmarks == null ||\n                            prevHandRectsFromLandmarks.length < this.maxHands)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.detectPalm(image3d)];\n                    case 1:\n                        allPalmDetections = _a.sent();\n                        if (allPalmDetections.length === 0) {\n                            this.reset();\n                            image3d.dispose();\n                            return [2 /*return*/, []];\n                        }\n                        palmDetections = allPalmDetections;\n                        handRectsFromPalmDetections = palmDetections.map(function (detection) { return _this.palmDetectionToRoi(detection, imageSize); });\n                        handRects = handRectsFromPalmDetections;\n                        return [3 /*break*/, 3];\n                    case 2:\n                        handRects = prevHandRectsFromLandmarks;\n                        _a.label = 3;\n                    case 3:\n                        // HandLandmarkTrackingCpu: AssociationNormRectCalculator\n                        // This calculator ensures that the output handRects array\n                        // doesn't contain overlapping regions based on the specified\n                        // minSimilarityThreshold. Note that our implementation does not perform\n                        // association between rects from previous image and rects based\n                        // on palm detections from the current image due to not having tracking\n                        // IDs in our API, so we don't call it with two inputs like MediaPipe\n                        // (previous and new rects). The call is nonetheless still necessary\n                        // since rects from previous image could overlap.\n                        handRects = association_norm_rect_1.calculateAssociationNormRect([handRects], constants.MPHANDS_MIN_SIMILARITY_THRESHOLD);\n                        return [4 /*yield*/, Promise.all(handRects.map(function (handRect) { return _this.handLandmarks(handRect, image3d); }))];\n                    case 4:\n                        handResults = _a.sent();\n                        hands = [];\n                        this.prevHandRectsFromLandmarks = [];\n                        for (_i = 0, handResults_1 = handResults; _i < handResults_1.length; _i++) {\n                            handResult = handResults_1[_i];\n                            if (handResult == null) {\n                                continue;\n                            }\n                            landmarks = handResult.landmarks, worldLandmarks = handResult.worldLandmarks, score = handResult.handScore, handedness = handResult.handedness;\n                            // HandLandmarkTrackingCpu: HandLandmarkLandmarksToRoi\n                            // Calculate region of interest (ROI) based on detected hand landmarks to\n                            // reuse on the subsequent runs of the graph.\n                            this.prevHandRectsFromLandmarks.push(this.handLandmarksToRoi(landmarks, imageSize));\n                            keypoints = normalized_keypoints_to_keypoints_1.normalizedKeypointsToKeypoints(landmarks, imageSize);\n                            // Add keypoint name.\n                            if (keypoints != null) {\n                                keypoints.forEach(function (keypoint, i) {\n                                    // delete keypoint.z;\n                                    keypoint.name = constants_1.MEDIAPIPE_KEYPOINTS[i];\n                                });\n                            }\n                            keypoints3D = worldLandmarks;\n                            // Add keypoint name.\n                            if (keypoints3D != null) {\n                                keypoints3D.forEach(function (keypoint3D, i) {\n                                    keypoint3D.name = constants_1.MEDIAPIPE_KEYPOINTS[i];\n                                });\n                            }\n                            hands.push({ keypoints: keypoints, keypoints3D: keypoints3D, handedness: handedness, score: score });\n                        }\n                        image3d.dispose();\n                        return [2 /*return*/, hands];\n                }\n            });\n        });\n    };\n    MediaPipeHandsTfjsDetector.prototype.dispose = function () {\n        this.detectorModel.dispose();\n        this.landmarkModel.dispose();\n        tf.dispose([\n            this.anchorTensor.x, this.anchorTensor.y, this.anchorTensor.w,\n            this.anchorTensor.h\n        ]);\n    };\n    MediaPipeHandsTfjsDetector.prototype.reset = function () {\n        this.prevHandRectsFromLandmarks = null;\n    };\n    // Detects palms.\n    // Subgraph: PalmDetectionCpu.\n    // ref:\n    // https://github.com/google/mediapipe/blob/master/mediapipe/modules/palm_detection/palm_detection_cpu.pbtxt\n    MediaPipeHandsTfjsDetector.prototype.detectPalm = function (image) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, imageValueShifted, padding, detectionResult, _b, boxes, logits, detections, selectedDetections, newDetections;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = convert_image_to_tensor_1.convertImageToTensor(image, constants.MPHANDS_DETECTOR_IMAGE_TO_TENSOR_CONFIG), imageValueShifted = _a.imageTensor, padding = _a.padding;\n                        detectionResult = this.detectorModel.predict(imageValueShifted);\n                        _b = detector_result_1.detectorResult(detectionResult), boxes = _b.boxes, logits = _b.logits;\n                        return [4 /*yield*/, tensors_to_detections_1.tensorsToDetections([logits, boxes], this.anchorTensor, constants.MPHANDS_TENSORS_TO_DETECTION_CONFIGURATION)];\n                    case 1:\n                        detections = _c.sent();\n                        if (detections.length === 0) {\n                            tf.dispose([imageValueShifted, detectionResult, logits, boxes]);\n                            return [2 /*return*/, detections];\n                        }\n                        return [4 /*yield*/, non_max_suppression_1.nonMaxSuppression(detections, this.maxHands, constants.MPHANDS_DETECTOR_NON_MAX_SUPPRESSION_CONFIGURATION\n                                .minSuppressionThreshold, constants.MPHANDS_DETECTOR_NON_MAX_SUPPRESSION_CONFIGURATION\n                                .overlapType)];\n                    case 2:\n                        selectedDetections = _c.sent();\n                        newDetections = remove_detection_letterbox_1.removeDetectionLetterbox(selectedDetections, padding);\n                        tf.dispose([imageValueShifted, detectionResult, logits, boxes]);\n                        return [2 /*return*/, newDetections];\n                }\n            });\n        });\n    };\n    // calculates hand ROI from palm detection.\n    // Subgraph: PalmDetectionDetectionToRoi.\n    // ref:\n    // https://github.com/google/mediapipe/blob/master/mediapipe/modules/hand_landmark/palm_detection_detection_to_roi.pbtxt\n    MediaPipeHandsTfjsDetector.prototype.palmDetectionToRoi = function (detection, imageSize) {\n        // Converts results of palm detection into a rectangle (normalized by image\n        // size) that encloses the palm and is rotated such that the line connecting\n        // center of the wrist and MCP of the middle finger is aligned with the\n        // Y-axis of the rectangle.\n        // PalmDetectionDetectionToRoi: DetectionsToRectsCalculator.\n        var rawRoi = detection_to_rect_1.calculateDetectionsToRects(detection, 'boundingbox', 'normRect', imageSize, {\n            rotationVectorStartKeypointIndex: 0,\n            rotationVectorEndKeypointIndex: 2,\n            rotationVectorTargetAngleDegree: 90\n        });\n        // Expands and shifts the rectangle that contains the palm so that it's\n        // likely to cover the entire hand.\n        // PalmDetectionDetectionToRoi: RectTransformationCalculation.\n        var roi = transform_rect_1.transformNormalizedRect(rawRoi, imageSize, constants.MPHANDS_DETECTOR_RECT_TRANSFORMATION_CONFIG);\n        return roi;\n    };\n    // Predict hand landmarks.\n    // subgraph: HandLandmarkCpu\n    // ref:\n    // https://github.com/google/mediapipe/blob/master/mediapipe/modules/hand_landmark/hand_landmark_cpu.pbtxt\n    MediaPipeHandsTfjsDetector.prototype.handLandmarks = function (handRect, image) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, imageValueShifted, padding, landmarkResult, landmarkTensor, handFlagTensor, handednessTensor, worldLandmarkTensor, handScore, handednessScore, handedness, landmarks, worldLandmarks, adjustedLandmarks, landmarksProjected, worldLandmarksProjected;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = convert_image_to_tensor_1.convertImageToTensor(image, constants.MPHANDS_LANDMARK_IMAGE_TO_TENSOR_CONFIG, handRect), imageValueShifted = _a.imageTensor, padding = _a.padding;\n                        landmarkResult = this.landmarkModel.execute(imageValueShifted, [\n                            'Identity_2:0', 'Identity_1:0', 'Identity:0', 'Identity_3:0'\n                        ]);\n                        landmarkTensor = landmarkResult[0], handFlagTensor = landmarkResult[1], handednessTensor = landmarkResult[2], worldLandmarkTensor = landmarkResult[3];\n                        return [4 /*yield*/, handFlagTensor.data()];\n                    case 1:\n                        handScore = (_b.sent())[0];\n                        // Applies a threshold to the confidence score to determine whether a hand\n                        // is present.\n                        if (handScore < constants.MPHANDS_HAND_PRESENCE_SCORE) {\n                            tf.dispose(landmarkResult);\n                            tf.dispose(imageValueShifted);\n                            return [2 /*return*/, null];\n                        }\n                        return [4 /*yield*/, handednessTensor.data()];\n                    case 2:\n                        handednessScore = (_b.sent())[0];\n                        handedness = handednessScore >= 0.5 ? 'Left' : 'Right';\n                        return [4 /*yield*/, tensors_to_landmarks_1.tensorsToLandmarks(landmarkTensor, constants.MPHANDS_TENSORS_TO_LANDMARKS_CONFIG)];\n                    case 3:\n                        landmarks = _b.sent();\n                        return [4 /*yield*/, tensors_to_landmarks_1.tensorsToLandmarks(worldLandmarkTensor, constants.MPHANDS_TENSORS_TO_WORLD_LANDMARKS_CONFIG)];\n                    case 4:\n                        worldLandmarks = _b.sent();\n                        adjustedLandmarks = remove_landmark_letterbox_1.removeLandmarkLetterbox(landmarks, padding);\n                        landmarksProjected = calculate_landmark_projection_1.calculateLandmarkProjection(adjustedLandmarks, handRect);\n                        worldLandmarksProjected = calculate_world_landmark_projection_1.calculateWorldLandmarkProjection(worldLandmarks, handRect);\n                        tf.dispose(landmarkResult);\n                        tf.dispose(imageValueShifted);\n                        return [2 /*return*/, {\n                                landmarks: landmarksProjected,\n                                worldLandmarks: worldLandmarksProjected,\n                                handScore: handScore,\n                                handedness: handedness\n                            }];\n                }\n            });\n        });\n    };\n    // Calculate hand region of interest (ROI) from landmarks.\n    // Subgraph: HandLandmarkLandmarksToRoi\n    // ref:\n    // https://github.com/google/mediapipe/blob/master/mediapipe/modules/hand_landmark/hand_landmark_landmarks_to_roi.pbtxt\n    // When landmarks is not null, imageSize should not be null either.\n    MediaPipeHandsTfjsDetector.prototype.handLandmarksToRoi = function (landmarks, imageSize) {\n        // Extracts a subset of the hand landmarks that are relatively more stable\n        // across frames (e.g. comparing to finger tips) for computing the bounding\n        // box. The box will later be expanded to contain the entire hand. In this\n        // approach, it is more robust to drastically changing hand size. The\n        // landmarks extracted are: wrist, MCP/PIP of five fingers.\n        // HandLandmarkLandmarksToRoi: SplitNormalizedLandmarkListCalculator.\n        var partialLandmarks = [].concat(landmarks.slice(0, 4), landmarks.slice(5, 7), landmarks.slice(9, 11), landmarks.slice(13, 15), landmarks.slice(17, 19));\n        // Converts the hand landmarks into a rectangle (normalized by image size)\n        // that encloses the hand. The calculator uses a subset of all hand\n        // landmarks extracted from the concat + slice above to\n        // calculate the bounding box and the rotation of the output rectangle.\n        // HandLandmarkLandmarksToRoi: HandLandmarksToRectCalculator.\n        var rawRoi = hand_landmarks_to_rect_1.handLandmarksToRect(partialLandmarks, imageSize);\n        // Expands pose rect with marging used during training.\n        // PoseLandmarksToRoi: RectTransformationCalculator.\n        var roi = transform_rect_1.transformNormalizedRect(rawRoi, imageSize, constants.MPHANDS_LANDMARK_RECT_TRANSFORMATION_CONFIG);\n        return roi;\n    };\n    return MediaPipeHandsTfjsDetector;\n}());\n/**\n * Loads the MediaPipeHands model.\n *\n * @param modelConfig ModelConfig object that contains parameters for\n * the MediaPipeHands loading process. Please find more details of each\n * parameters in the documentation of the `MediaPipeHandsTfjsModelConfig`\n * interface.\n */\nfunction load(modelConfig) {\n    return __awaiter(this, void 0, void 0, function () {\n        var config, detectorFromTFHub, landmarkFromTFHub, _a, detectorModel, landmarkModel;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    config = detector_utils_1.validateModelConfig(modelConfig);\n                    detectorFromTFHub = (config.detectorModelUrl.indexOf('https://tfhub.dev') > -1);\n                    landmarkFromTFHub = (config.landmarkModelUrl.indexOf('https://tfhub.dev') > -1);\n                    return [4 /*yield*/, Promise.all([\n                            tfconv.loadGraphModel(config.detectorModelUrl, { fromTFHub: detectorFromTFHub }),\n                            tfconv.loadGraphModel(config.landmarkModelUrl, { fromTFHub: landmarkFromTFHub })\n                        ])];\n                case 1:\n                    _a = _b.sent(), detectorModel = _a[0], landmarkModel = _a[1];\n                    return [2 /*return*/, new MediaPipeHandsTfjsDetector(detectorModel, landmarkModel, config.maxHands)];\n            }\n        });\n    });\n}\nexports.load = load;\n"},"sourceMaps":{"js":{"version":3,"file":"detector.js","sourceRoot":"","sources":["../../src/tfjs/detector.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"08f5b7a792c98839f999d66948ad5450","cacheData":{"env":{}}}